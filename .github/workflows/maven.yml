# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Pull Code from GitHub
      uses: actions/checkout@v3

    - name: Install Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build Java App (Maven)
      run: mvn clean package -DskipTests

    - name: Find JAR File
      run: |
        echo "JAR_FILE=$(find target -name '*.jar' | head -n 1)" >> $GITHUB_ENV

    - name: Save EC2 PEM Key
      run: |
        echo "${{ secrets.EC2_KEY }}" > key.pem
        chmod 400 key.pem

    - name: Send JAR to EC2
      run: |
        scp -i key.pem -o StrictHostKeyChecking=no $JAR_FILE ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/app.jar

    - name: Run JAR File on EC2
      run: |
        ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Stop any existing app on port 8080
          sudo fuser -k 8080/tcp || true

          # Start new app in background
          nohup java -jar /home/${USER}/app.jar > app.log 2>&1 &
        EOF
